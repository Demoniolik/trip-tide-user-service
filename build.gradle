plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
	id "org.sonarqube" version "4.0.0.2929"
	id 'jacoco'
}

group = 'com.travel'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
targetCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.1.1'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.0'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:mongodb:1.18.0'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	reports {
		xml.enabled true
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					'com.travel.trip.tide.user.exception.*',
					'com.travel.trip.tide.user.exception.handler.*',
					'com.travel.trip.tide.user.model.*.*',
					'com.travel.trip.tide.user.entity.*',
					'com.travel.trip.tide.user.configuration.*'
			])
		}))
	}
}

test.finalizedBy jacocoTestReport

sonarqube {
	properties {
		property "sonar.projectKey", "Demoniolik_trip-tide-user-service"
		property "sonar.organization", "demoniolik"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}
